package core.agents.util;

import suport.financial.partternsCandleStick.CandleStick;
import suport.util.database.mongoDB.pojo.OrdersCreate;
import core.agents.ConversationsID;
import core.agents.behaviours.CreateExpertsAgents;
import jade.core.AID;
import jade.core.Agent;
import jade.core.behaviours.CyclicBehaviour;
import jade.core.behaviours.TickerBehaviour;
import jade.domain.DFService;
import jade.domain.FIPAException;
import jade.domain.FIPAAgentManagement.DFAgentDescription;
import jade.lang.acl.ACLMessage;
import jade.lang.acl.MessageTemplate;
import jade.lang.acl.UnreadableException;

public class AgenteA extends Agent {

	/**
	 * 
	 */
	private static final long serialVersionUID = 1L;
	private CreateExpertsAgents behaviourCreateAgents;
	
	public void setup() {
		DFAgentDescription agentDescriptor = new DFAgentDescription();
		agentDescriptor.setName(getAID());

		try {
			DFService.register(this, agentDescriptor);
			
			OrdersCreate orderCreate= new OrdersCreate();
			orderCreate.setUserIndetifier("ramon");
			orderCreate.setUserPerfil(0);
			orderCreate.setUserValue(1000);
			
			System.out.println("agente "+this.getName());
			behaviourCreateAgents = new CreateExpertsAgents(this,orderCreate);
			behaviourCreateAgents.start();
			
			addBehaviour(new CyclicBehaviour(this)
			{
				
				/**
				 * 
				 */
				private static final long serialVersionUID = 1L;

				@Override
				public void action() {
					MessageTemplate template=MessageTemplate.and(
							MessageTemplate.MatchConversationId("MSG1"), 
							MessageTemplate.MatchPerformative(ACLMessage.INFORM)
							);
					
					ACLMessage msg=myAgent.receive(template);
					if(msg!=null)
					{
						System.out.println(myAgent.getLocalName()+" :[1] Mensagem Recebida "+msg.getConversationId());
					}else block();
					
				}
			});
			
			addBehaviour(new CyclicBehaviour(this)
			{
				
				/**
				 * 
				 */
				private static final long serialVersionUID = 1L;
				@Override
				public void action() {
					
					MessageTemplate template=MessageTemplate.and(
							MessageTemplate.MatchConversationId("MSG2"), 
							MessageTemplate.MatchPerformative(ACLMessage.INFORM)
							);
					
					
					ACLMessage msg=myAgent.receive(template);
					if(msg!=null)
					{
						System.out.println(myAgent.getLocalName()+" :[2] Mensagem Recebida "+msg.getContent());
					}else block();
					
				}
			});
			
		} catch (FIPAException e) {

			e.printStackTrace();
		}
	}

	public void takeDown() 
	{

	}

}
