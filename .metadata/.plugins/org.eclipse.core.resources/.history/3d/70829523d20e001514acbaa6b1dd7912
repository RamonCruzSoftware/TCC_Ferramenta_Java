package core.agents.behaviours;

import java.io.File;
import java.util.ArrayList;

import core.agents.util.StocksInMemory;
import jade.core.Agent;
import jade.core.behaviours.Behaviour;
import jade.core.behaviours.OneShotBehaviour;
import jade.core.behaviours.SequentialBehaviour;
import jade.core.behaviours.WakerBehaviour;
import jade.wrapper.AgentController;
import jade.wrapper.PlatformController;
import suport.financial.wallet.Stock;
import suport.statistical.Statistical;
import suport.util.InfoConversations;
import suport.util.database.mongoDB.dao.StockDao;
import suport.util.requests.YahooFinance;

public class DownloadAndRequestStocks implements ProcedureBehaviour {
	private SequentialBehaviour sequentialBehaviour;
	private OneShotBehaviour downloadSocks;
	private OneShotBehaviour calculeStatistics;
	private WakerBehaviour pediodical;
	
	private InfoConversations info;
	private Agent agent;
	
	private String dir_1 = "/Users/ramon/Desktop";
	private String subDir_1 = "/TCC2";
	private String subDir_2 = "/Ativos";
	private String sectorsCsvFilePath = "/Users/ramon/Dropbox/UnB/TCC/workspace/java/Setores";
	private ArrayList<Stock> stockList = null;
	private StockDao stockDao = null;
	private Statistical statistical = null;
	private static final int CORAJOSO = 0;
	private static final int MODERADO = 1;
	private static final int CONSERVADOR = 2;
	private StocksInMemory simulationsData;
	private boolean isSimulation;
	
	private DownloadAndRequestStocks(){}
	
	public DownloadAndRequestStocks(Agent agent)
	{
		this.agent =agent;
		stockDao = new StockDao();
		statistical = new Statistical();
		
		simulationsData = StocksInMemory.getInstance();
		isSimulation=true;
		
		this.sequentialBehaviour= new SequentialBehaviour(agent)
		{
			
			private static final long serialVersionUID = 1L;

			public int onEnd()
			{
				System.out.println("Comportamento sequencial Concluido");
			
				return 0;
			}
		};
		
		buildBehaviour();

	}
	public void start()
	{
		

	}

	public Behaviour getBehaviour() {
		
		return null;
	}
	private void buildBehaviour()
	{
		this.downloadSocks=new OneShotBehaviour(agent) {
			private static final long serialVersionUID = 1L;

			@Override
			public void action() {
				try {
					File file = new File(dir_1 + subDir_1+ subDir_2);
					if (file.isDirectory()) 
					{
						if (file.listFiles().length > 2)//TODO
					   {
//							hunter.log.debug("Arquivos CSV ja foram baixados");
							System.out.println("Arquivos CSV ja foram baixados");
							loadDataBase();
						}
						else 
						{
							//hunter.downloadCsvFiles(hunter.dir_1,hunter.subDir_1, hunter.subDir_2,hunter.sectorsCsvFilePath);
						}
						if (stockDao.getStocksPricesCount() == 0) 
						{//TODO
//							hunter.log.debug("Carregar dados no Banco");
							System.out.println(":Carregar dados no Banco");
							loadDataBase();
//							hunter.log.debug("Banco carregado com "+hunter.stockDao.getStocksPricesCount()+"cotacoes");
							
						} else 
						{
							//TODO
							
//							hunter.log.debug("Banco ja carregado com "+ hunter.stockDao.getStocksPricesCount()+ " Cotacoes");
							System.out.println(":Banco jah carregado com "+ stockDao.getStocksPricesCount()+ " Cotacoes");
							
							if(!isSimulation)stockList = stockDao.getAllStocksWithPrices();
							else 
							{
								//hunter.stockList=hunter.stockDao.getAllStocksWithPricesBetweenInterval(hunter.simulationSetup.getStartDate(), hunter.simulationSetup.getStartDate());
								
								stockList=simulationsData.getStockList();
							
							}
							
//							hunter.log.debug("Iniciando procedimento de calculo de valores estatisticos");
							
							System.out.println(":Iniciando procedimento de calculo de valores estatisticos");
							if(!isSimulation)downloadCurrentCsvFiles(dir_1,subDir_1, subDir_2,sectorsCsvFilePath);
							else
								{
									hunter.calculateStatistical();
									
									PlatformController container = getContainerController();
									try {//TODO
										//log.info("Criando Gertor:"+nameAgentManager);
										// Xms128m
										Object[] argument;
										argument = new Object[1];
										argument[0] = "Xms512m";

										AgentController agentController = container.createNewAgent(
												"Simulator", "core.agents.util.StockAgent", argument);
										agentController.start();

									} catch (Exception e) {
										e.printStackTrace();//TODO
										log.error("Msg:"+e.getMessage()+"Causa:"+e.getCause());
									}
								}
							
							
						}
					} else
					{ //TODO
					//	hunter.log.debug("Iniciando procedimento de downloand de csv com cotacoes");
						hunter.conversations = false;
						System.out.println(hunter.getLocalName()+":Baixar CSV");
						hunter.downloadCsvFiles(hunter.dir_1,hunter.subDir_1, hunter.subDir_2,hunter.sectorsCsvFilePath);
					}
				} catch (Exception e) { //TODO
					e.printStackTrace();
//					log.error("Msg:"+e.getMessage()+"Causa:"+e.getCause());
				}
			}
		};
	}

	
	private void calculateStatistical() 
	{
		
//		this.conversations = false;
		for (Stock s : this.stockList) 
		{//TODO 
			
			hunter.log.debug("Calculando valores estatiscos para "+ s.getCodeName());
			System.out.println("Calculando valores estatiscos para "+ s.getCodeName());
			s.setAvarangeReturn_15(this.statistical.averangeReturn_15(s.getCandleSticks()));
			s.setAvarangeReturn_30(this.statistical.averangeReturn_30(s.getCandleSticks()));
			s.setStandardDeviation_15(this.statistical.calculeStandardDeviation_15(s.getCandleSticks()));
			s.setStandardDeviation_30(this.statistical.calculeStandardDeviation_30(s.getCandleSticks()));
			s.setVariance_15(this.statistical.calculeVariance_15(s.getCandleSticks()));
			s.setVariance_30(this.statistical.calculeVariance_30(s.getCandleSticks()));
			s.setVarianceCoefficient_15(this.statistical.calculeVariance_15(s.getCandleSticks()));
			s.setVarianceCoefficient_30(this.statistical.calculeVariance_30(s.getCandleSticks()));
			this.hunter.stockDao.updateStock(s);
		}

		this.conversations = true;//TODO
		hunter.log.debug("Calculos concluidos! ");
		
		System.out.println(hunter.getLocalName()+": Calculos concuidos!");
	}
	
	private void loadDataBase() {
		YahooFinance yahooFinance;
		this.stockList = new ArrayList<Stock>();
		int countStocks = 0;
		int countCandleSticks = 0;
		
		try
		{ 
			yahooFinance = new YahooFinance(this.dir_1, this.subDir_1,this.subDir_2);
			ArrayList<Stock> stocksFromCsv = yahooFinance.loadStocksFromCsv(this.sectorsCsvFilePath);
			System.out.println("Setores =:"+this.sectorsCsvFilePath);
			if(stocksFromCsv!=null)
			{
				for (Stock s : stocksFromCsv) 
				{
					s.setCandleSticks(yahooFinance.getHistoricalValue(s.getCodeName()));//TODO
					hunter.log.debug(s.getCodeName() + " Carregado com "+ s.getCandleSticks().size() + " Valores");
					if (s.getCandleSticks().size() > 0) 
					{
						this.stockDao.storeHistoricalStockValue(s);
						countCandleSticks += s.getCandleSticks().size();
						countStocks++;
						this.stockList.add(s);
					}
				}//TODO
				hunter.log.debug(countStocks + " Acoes persistidas com sucesso !");
				hunter.log.debug( this.stockList.size() + "Acoes em memoria");
				hunter.log.debug("Total de CandleSticks: " + countCandleSticks);
				hunter.log.debug("Iniciando calculo de valores estatisticos para catalogar");
				
				hunter.calculateStatistical();
			}
		}catch (Exception e) {
			
		}
		
		
	}
}
