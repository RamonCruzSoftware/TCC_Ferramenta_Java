package core.agents.behaviours;

import java.util.ArrayList;

import suport.financial.wallet.Stock;
import suport.statistical.Statistical;
import suport.util.InfoConversations;
import suport.util.database.mongoDB.dao.StockDao;
import jade.core.Agent;
import jade.core.behaviours.Behaviour;
import jade.core.behaviours.OneShotBehaviour;
import jade.lang.acl.ACLMessage;

public class FindBestStocks implements ProcedureBehaviour {

	private OneShotBehaviour findBestStocks;
	private Agent agent;
	private static final int CORAJOSO = 0;
	private static final int MODERADO = 1;
	private static final int CONSERVADOR = 2;
	private InfoConversations info;
	private ArrayList<Stock> stockList = null;
	private StockDao stockDao = null;
	private Statistical statistical = null;
	
	private FindBestStocks(){}
	public FindBestStocks(Agent agent)
	{
		this.agent=agent;
		stockDao = new StockDao();
		statistical = new Statistical();
		
	}
	public void start() {
		// TODO Auto-generated method stub

	}

	public void start(final ACLMessage msg) {
		
		this.findBestStocks=new OneShotBehaviour(agent)
		{
			
			@Override
			public void action() {
				
				System.out.println("HUNTER->Pedido Recebido");
				ArrayList<Stock> stocksuggestion = null;
				ArrayList<Stock> stockSuggestions_aux = null;
				int lowerLimit = 0;
				int upperLimit = 0;
				info = (InfoConversations) msg.getContentObject();
				stocksuggestion = new ArrayList<Stock>();

				switch (info.getUserProfile()) {// TODO LOG
				case CORAJOSO: {
					lowerLimit = 15;
					upperLimit = 30;
					do {
						stockSuggestions_aux = stockDao
								.getStockOrderByStandardDeviation_30(
										lowerLimit, upperLimit);
						if (lowerLimit > 0)
							lowerLimit--;
						upperLimit++;
						info.setLowerPercent(lowerLimit);
						info.setUpperPercent(upperLimit);
						stocksuggestion = stockSuggestions_aux;
					} while (stocksuggestion.size() < 9);
					info.setStockList(stocksuggestion);
				}
					break;
				case MODERADO: {
					lowerLimit = 5;
					upperLimit = 10;
					do {
						stockSuggestions_aux = hunter.stockDao
								.getStockOrderByStandardDeviation_30(
										lowerLimit, upperLimit);
						if (lowerLimit > 0)
							lowerLimit--;
						upperLimit++;
						info.setLowerPercent(lowerLimit);
						info.setUpperPercent(upperLimit);
						stocksuggestion = stockSuggestions_aux;
					} while (stocksuggestion.size() == 0);
					info.setStockList(stocksuggestion);
				}
					break;
				case CONSERVADOR: {
					if (lowerLimit > 0)
						lowerLimit--;
					upperLimit = 6;
					do {
						stockSuggestions_aux = hunter.stockDao
								.getStockOrderByStandardDeviation_30(
										lowerLimit, upperLimit);
						upperLimit++;
						info.setLowerPercent(lowerLimit);
						info.setUpperPercent(upperLimit);
						stocksuggestion = stockSuggestions_aux;
					} while (stocksuggestion.size() == 0);
					info.setStockList(stocksuggestion);
				}
					break;
				default:
					break;
				}
				reply = messages.createReply();
				reply.setPerformative(ACLMessage.PROPOSE);
				reply.setContentObject(info);
				
				System.out.println("HUNTER RESPONDEU");
				myAgent.send(reply);
			}
		};

	}

	public void start(Object object) {
		// TODO Auto-generated method stub

	}

	public Behaviour getBehaviour() {
		// TODO Auto-generated method stub
		return null;
	}

}
